name: .NET Core

on: 
  push:
    branches: 
    - master
    - dev

jobs:
            
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Log in to DockerHub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.0.100
      - name: Publish server
        run: dotnet publish "logic/Logic.Server/Logic.Server.csproj" -c Release -r linux-x64 --self-contained true
      - name: Build docker image of server
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/thuai_server:latest -f logic/ServerDockerfile .
      - name: Push server image  to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/thuai_server:latest

      - name: Build CAPI_compile docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/thuai_compiler:latest -f CAPI/Dockerfile_compile .
      - name: Push CAPI_compile image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/thuai_compiler:latest
      - name: Get Protobuf and libprotos.so from Compiler
        run: |
          ls
          mkdir temp
          cd temp
          docker run --name compiler ${{ secrets.DOCKER_USERNAME }}/thuai_compiler:latest bash /usr/local/CAPI/compile.sh
          docker cp compiler:/usr/local/CAPI/build/proto/lib/libprotos.so .
          docker cp compiler:/usr/local/protobuf .
          ls
          cd ..
      - name: Publish agent
        run: dotnet publish "communication/Agent/Communication.Agent.csproj" -c Release -r linux-x64 -f netcoreapp3.0 --self-contained true
      - name: Build docker image of agent
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/thuai_agentclient:latest -f CAPI/Dockerfile_run .

      - name: Push agent image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/thuai_agentclient:latest
